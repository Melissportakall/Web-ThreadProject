{"ast":null,"code":"var _jsxFileName = \"/Users/melisportakal/Desktop/sonlutfen/src/Components/AdminDynamicLog/AdminDynamicLog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport styles from './AdminDynamicLog.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDynamicLog = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    const socket = io('http://127.0.0.1:3000');\n    socket.on('connect', () => {\n      console.log('WebSocket bağlantısı kuruldu.');\n    });\n    socket.on('dynamic_logs', receivedLogs => {\n      console.log('Gelen loglar:', receivedLogs);\n      if (Array.isArray(receivedLogs)) {\n        setLogs(receivedLogs);\n      } else {\n        setLogs(prevLogs => [receivedLogs, ...prevLogs]);\n      }\n    });\n    socket.on('disconnect', () => {\n      console.log('WebSocket bağlantısı kapatıldı.');\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.logContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.logList,\n      children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.logItem,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: log.LogDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \" - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [log.LogType, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 46\n        }, this), \" M\\xFC\\u015Fteri \", log.CustomerID, \" \", log.LogDetails]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDynamicLog, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = AdminDynamicLog;\nexport default AdminDynamicLog;\nvar _c;\n$RefreshReg$(_c, \"AdminDynamicLog\");","map":{"version":3,"names":["React","useEffect","useState","io","styles","jsxDEV","_jsxDEV","AdminDynamicLog","_s","logs","setLogs","socket","on","console","log","receivedLogs","Array","isArray","prevLogs","disconnect","className","logContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","logList","map","index","logItem","LogDate","LogType","CustomerID","LogDetails","_c","$RefreshReg$"],"sources":["/Users/melisportakal/Desktop/sonlutfen/src/Components/AdminDynamicLog/AdminDynamicLog.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport styles from './AdminDynamicLog.module.css';\n\nconst AdminDynamicLog = () => {\n  const [logs, setLogs] = useState([]);\n  \n  useEffect(() => {\n    const socket = io('http://127.0.0.1:3000');\n\n    socket.on('connect', () => {\n      console.log('WebSocket bağlantısı kuruldu.');\n    });\n\n    socket.on('dynamic_logs', (receivedLogs) => {\n      console.log('Gelen loglar:', receivedLogs);\n\n      if (Array.isArray(receivedLogs)) {\n        setLogs(receivedLogs);\n      } else {\n        setLogs((prevLogs) => [receivedLogs, ...prevLogs]);\n      }\n    });\n\n    socket.on('disconnect', () => {\n      console.log('WebSocket bağlantısı kapatıldı.');\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  return (\n    <div className={styles.logContainer}>\n      <h2>Logs</h2>\n      <ul className={styles.logList}>\n        {logs.map((log, index) => (\n          <li key={index} className={styles.logItem}>\n            <strong>{log.LogDate}</strong> - <strong>{log.LogType}:</strong> Müşteri {log.CustomerID} {log.LogDetails}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdminDynamicLog;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,MAAM,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAGR,EAAE,CAAC,uBAAuB,CAAC;IAE1CQ,MAAM,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC;IAEFH,MAAM,CAACC,EAAE,CAAC,cAAc,EAAGG,YAAY,IAAK;MAC1CF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,YAAY,CAAC;MAE1C,IAAIC,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;QAC/BL,OAAO,CAACK,YAAY,CAAC;MACvB,CAAC,MAAM;QACLL,OAAO,CAAEQ,QAAQ,IAAK,CAACH,YAAY,EAAE,GAAGG,QAAQ,CAAC,CAAC;MACpD;IACF,CAAC,CAAC;IAEFP,MAAM,CAACC,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,CAAC;IAEF,OAAO,MAAM;MACXH,MAAM,CAACQ,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKc,SAAS,EAAEhB,MAAM,CAACiB,YAAa;IAAAC,QAAA,gBAClChB,OAAA;MAAAgB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbpB,OAAA;MAAIc,SAAS,EAAEhB,MAAM,CAACuB,OAAQ;MAAAL,QAAA,EAC3Bb,IAAI,CAACmB,GAAG,CAAC,CAACd,GAAG,EAAEe,KAAK,kBACnBvB,OAAA;QAAgBc,SAAS,EAAEhB,MAAM,CAAC0B,OAAQ;QAAAR,QAAA,gBACxChB,OAAA;UAAAgB,QAAA,EAASR,GAAG,CAACiB;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,eAAApB,OAAA;UAAAgB,QAAA,GAASR,GAAG,CAACkB,OAAO,EAAC,GAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,qBAAS,EAACZ,GAAG,CAACmB,UAAU,EAAC,GAAC,EAACnB,GAAG,CAACoB,UAAU;MAAA,GADlGL,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzCID,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}